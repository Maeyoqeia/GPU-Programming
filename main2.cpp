/// @file
////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// Copyright (C) 2016/17      Christian Lessig, Otto-von-Guericke Universitaet Magdeburg
///
////////////////////////////////////////////////////////////////////////////////////////////////////
///
///  module     : lecture 3
///
///  author     : lessig@isg.cs.ovgu.de
///
///  project    : GPU Programming
///
///  description: race conditions
///
////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <vector>
#include <thread>
#include <cstdlib>


unsigned int n = 8192;

std::vector<int> a( n, 1.0);
std::vector<int> b( n, 1.0);

int sum;

////////////////////////////////////////////////////////////////////////////////////////////////////
// add two vectors together
////////////////////////////////////////////////////////////////////////////////////////////////////
void
compute_sum( unsigned int tid, unsigned int num_threads)
{
  unsigned int delta = n / num_threads;
  unsigned int i1 = tid * delta;
  unsigned int i2 = (tid+1) * delta;

  int sum_loc = 0;
  for( unsigned int i = i1; i < i2; ++i) {
    sum_loc += a[i] * b[i];
  }

  sum += sum_loc;
}

////////////////////////////////////////////////////////////////////////////////////////////////////
// program entry point
////////////////////////////////////////////////////////////////////////////////////////////////////
int
main( int /*argc*/, char** /*argv*/ ) {

  sum = 0;

  std::thread t1( compute_sum, 0, 2);
  std::thread t2( compute_sum, 1, 2);

  t1.join();
  t2.join();

  std::cerr << "sum = " << sum << std::endl;

  return EXIT_SUCCESS;
}
